package com.developer.portfolio.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class PortfolioAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPortfolioAllPropertiesEquals(Portfolio expected, Portfolio actual) {
        assertPortfolioAutoGeneratedPropertiesEquals(expected, actual);
        assertPortfolioAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPortfolioAllUpdatablePropertiesEquals(Portfolio expected, Portfolio actual) {
        assertPortfolioUpdatableFieldsEquals(expected, actual);
        assertPortfolioUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPortfolioAutoGeneratedPropertiesEquals(Portfolio expected, Portfolio actual) {
        assertThat(expected)
            .as("Verify Portfolio auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPortfolioUpdatableFieldsEquals(Portfolio expected, Portfolio actual) {
        assertThat(expected)
            .as("Verify Portfolio relevant properties")
            .satisfies(e -> assertThat(e.getProjectName()).as("check projectName").isEqualTo(actual.getProjectName()))
            .satisfies(e -> assertThat(e.getDescription()).as("check description").isEqualTo(actual.getDescription()))
            .satisfies(e -> assertThat(e.getImageUrl()).as("check imageUrl").isEqualTo(actual.getImageUrl()))
            .satisfies(e -> assertThat(e.getLink()).as("check link").isEqualTo(actual.getLink()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPortfolioUpdatableRelationshipsEquals(Portfolio expected, Portfolio actual) {
        // empty method
    }
}
